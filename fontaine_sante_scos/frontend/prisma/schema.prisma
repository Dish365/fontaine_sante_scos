datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Supplier {
  id                  String    @id @default(cuid())
  name                String
  address             String
  coordinates         Json      // { lat: number, lng: number }
  materials           String[]  // Array of material IDs
  transportMode       String?
  distance            Float?
  transportationDetails String?
  productionCapacity  String?
  certifications      String[]
  performanceHistory  String?
  environmentalImpact String?
  riskScore          String?
  quality            Float?
  contactInfo        Json?     // { name: string, email: string, phone: string }
  economicData       Json?     // { reliabilityScore: number, averageLeadTime: number, paymentTerms: string }
  environmentalData  Json?     // { carbonFootprint: number, waterUsage: number, wasteGenerated: number, renewableEnergyUse: number }
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  materialPricing    SupplierMaterialPricing[]
}

model RawMaterial {
  id                String    @id @default(cuid())
  name              String
  type              String
  description       String
  quantity          Float
  unit              String
  quality           Json      // { score: number, defectRate: number, consistencyScore: number }
  environmentalData Json      // { carbonFootprint: number, waterUsage: number, landUse: number, biodiversityImpact: string }
  economicData      Json      // { unitCost: number, transportationCost: number, storageCost: number, totalCostPerUnit: number }
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  supplierPricing   SupplierMaterialPricing[]
}

model SupplierMaterialPricing {
  id                String      @id @default(cuid())
  supplier          Supplier    @relation(fields: [supplierId], references: [id])
  supplierId        String
  material          RawMaterial @relation(fields: [materialId], references: [id])
  materialId        String
  unitPrice         Float       // Base price per unit
  currency          String      @default("USD")
  minOrderQuantity  Float?      // Minimum order quantity
  leadTime          Int?        // Lead time in days
  transportCost     Float?      // Transportation cost per unit
  volumeDiscounts   Json?       // Array of { quantity: number, discountPercentage: number }
  priceHistory      Json?       // Array of { date: string, price: number }
  lastNegotiation   DateTime?   // Date of last price negotiation
  nextReview        DateTime?   // Next scheduled price review
  isPreferred       Boolean     @default(false)  // Whether this is a preferred supplier for this material
  notes             String?     // Additional notes about the pricing arrangement
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt

  @@unique([supplierId, materialId])
  @@index([supplierId])
  @@index([materialId])
}

model Warehouse {
  id               String    @id @default(cuid())
  name             String
  type             String
  location         Json      // { lat: number, lng: number, address: string }
  capacity         Json      // { maxCapacity: number, currentUtilization: number, unit: string }
  suppliers        String[]  // Array of supplier IDs
  materials        String[]  // Array of material IDs
  transitTimes     Json      // { inbound: number, outbound: number }
  operationalCost  Float
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
} 